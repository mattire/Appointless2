@model AppointLess2.Schedule



@{
    ViewBag.Title = "Edit";
}

<script src="~/Scripts/jquery-3.3.1.js"></script>

<h2>Vastaanottoaikataulun muokkaus</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    @*<h4>Schedule</h4>*@
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.UserID, "UserID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("UserID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
        </div>
    </div>

    <h3>Vastaanottoajat</h3>
    @Html.Partial("../TimeSlots/Index", Model.TimeSlots)

    @*<button class="accordion">Vastaanottoajan syöttö</button>
        <div>*@
    <h3>Syötä uusi vastaanottoaika</h3>
    @Html.Partial("TimeSlotInput", new AppointLess2.ViewModels.ScheduleViewModels.TimeSlotInput())
    @*</div>*@

    @Html.ActionLink("Edit schedule timeslots", "Index", "TimeSlots", new { id = Model.Id }, null) |

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>

    var acc = document.getElementsByClassName("accordion");
    var i;

    for (i = 0; i < acc.length; i++) {
        acc[i].addEventListener("click", function () {
            this.classList.toggle("active");
            var panel = this.nextElementSibling;
            if (panel.style.display === "block") {
                panel.style.display = "none";
            } else {
                panel.style.display = "block";
            }
        });
    }


</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
