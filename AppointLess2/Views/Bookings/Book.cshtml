@model AppointLess2.ViewModels.BookingVM

@{
    ViewBag.Title = "Book";
}

<h2>Varaa</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>@string.Join(".", Model.EventDate.Split('.').Reverse())</h4>
        <h4>@Model.TimeSlot.TimeOfDay.Hours:@Model.TimeSlot.TimeOfDay.Minutes.ToString("00")</h4>
        <h4>@Model.TimeSlot.LengthMinutes minuuttia</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BookerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BookerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BookerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2" for="CheckField">Paljonko on @Model.Number1 + @Model.Number2?</label>
            @*@Html.LabelFor(model => model.CheckField, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckField, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CheckField, "", new { @class = "text-danger" })
            </div>
        </div>


        @Html.HiddenFor(model => model.EventDate)
        @Html.HiddenFor(model => model.TimeSlotId)
        @Html.HiddenFor(model => model.Number1)
        @Html.HiddenFor(model => model.Number2)
        @*@Html.HiddenFor(model => model.ReturnUrl)*@
        <input id="return_url" name="return_url" type="hidden" value="@Model.ReturnUrl">

        @*<div class="form-group">
                @Html.LabelFor(model => model.EventDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventDate, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.EventTime, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EventTime, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EventTime, "", new { @class = "text-danger" })
                </div>
            </div>*@

        @*<div class="form-group">
                @Html.LabelFor(model => model.TimeSlotId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TimeSlotId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TimeSlotId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                @*<input type="submit" value="Create" class="btn btn-default" />*@
                <input type="submit" value="Lähetä varmistus sähköposti" name="answer" style="font-size:medium; margin-bottom:10px"
                       formaction=@Url.Action("Create") formmethod="post" class="btn btn-primary" /><br />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Model.ReturnUrl">Paluu</a>
    @*<button onclick="window.history.back();">Takaisin viikkonäkymään</button>*@
    @*<button onclick="window.location = document.referrer;">Takaisin viikkonäkymään</button>*@

    @*@Html.ActionLink("Takaisin viikkonäkymään", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

