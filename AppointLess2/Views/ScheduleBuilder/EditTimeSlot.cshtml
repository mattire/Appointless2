@model AppointLess2.ViewModels.ScheduleViewModels.TimeSlotVM

@{
    ViewBag.Title = "TimeSlotEdit";
}

<h2>TimeSlotEdit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TimeSlotVM</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        <input type="hidden" id="CheckboxValues" name="CheckboxValues" value="xxx">

        <div class="form-group">
            @Html.LabelFor(model => model.DaysOfWeek, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.DaysOfWeek, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.CheckBoxListFor(model => model.DaysOfWeek, Model.DaysOfWeek, new { @class = "form-horizontal", @style = "margin-left:40px;" })*@
                @*@Html.CheckBoxFor(model => model.DaysOfWeek.ElementAt(0), , )*@

                @{
                    foreach (var day in Model.DaysOfWeek)
                    {
                        if (day.Selected)
                        {
                            <input name="@day.Text" id="@day.Text" type="checkbox" checked="checked" value="@day.Text" data-val="true"> @day.Text;
                        }
                        else
                        {
                            <input name="@day.Text" id="@day.Text" type="checkbox" value="@day.Text" data-val="true"> @day.Text;
                        }
                    }
                }
                @*<input type="checkbox" checked="@{ Model.DaysOfWeek.ElementAt(0)  } "> @Model.DaysOfWeek.ElementAt(0).Text <input />*@

                @Html.ValidationMessageFor(model => model.DaysOfWeek, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TimeOfDay, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeOfDay, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeOfDay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LengthMinutes, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LengthMinutes, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LengthMinutes, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ScheduleID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ScheduleID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ScheduleID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" accesskey="s" class="btn btn-default" />
            </div>
        </div>
    </div>

    <canvas id="schedMiniMap" width="350" height="240"
            style="border:1px solid #c3c3c3;">
        Your browser does not support the canvas element.
    </canvas>

}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script>

    function WriteToCanvas(hour, mins, days, color) {
        var canvas = document.getElementById("schedMiniMap");
        var ctx = canvas.getContext("2d");
        ctx.fillStyle = color;
        //ctx.fillRect(0,0,150,75);
        i = 0;
        days.forEach(function (d) {
            if (d == 1) {
                var startX = i * 50;

                var lenX = 50;
                var startY = hour * 10;
                var lenY = mins / 6;
                ctx.fillRect(startX, startY, 50, lenY);
            }
            i++;
        });
    }

    function Lines() {
        var c = document.getElementById("schedMiniMap");
        var ctx = c.getContext("2d");

        for (var i = 1; i < 7; i++) {
            ctx.beginPath();
            ctx.moveTo(i * 50, 0);
            ctx.lineTo(i * 50, 240);
            ctx.stroke();
        }
    }

    $('document').ready(function () {
        try {
            var color = "#FF0000";
            var array1 = [1, 1, 0, 0, 1, 0, 0];
            WriteToCanvas(8, 60, array1, color);
            array1 = [1, 1, 1, 1, 1, 0, 0];
            color = "#0000FF";
            WriteToCanvas(10, 60, array1, color);
            Lines();
        } catch (ex) {
            alert(ex);
        }
    });

</script>


